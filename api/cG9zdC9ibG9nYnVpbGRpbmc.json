{"title":"Blog Building","date":"2023-06-08T14:08:00.000Z","date_formatted":{"ll":"Jun 8, 2023","L":"06/08/2023","MM-DD":"06-08"},"thumbnail":"https://cdn.cco.moe/img/img07.webp","link":"post/blogbuilding","comments":true,"tags":["Blog"],"categories":["share"],"updated":"2023-12-06T17:28:57.143Z","content":"<blockquote>\n<p>Hexo是基于Nodejs的静态博客框架，快速、简约且高效。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"hexo安装\">Hexo安装<a title=\"#hexo安装\" href=\"#hexo安装\"></a></h2>\n<p>Git和Nodejs对于Hexo的安装不可或缺，macOS可以使用Homebrew进行安装：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install git</span><br><span class=\"line\">brew install node</span><br></pre></td></tr></table></figure>\n<p>安装完Nodejs的同时就已经拥有了npm包管理器，这个时候需要用npm安装Hexo：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>\n<p>之后最好在 <strong>个人目录(~)</strong> 中手动创建博客根目录 <strong>blog</strong> <em>(名称可以任意取)</em> ，也可以cd到 <strong>个人目录(~)</strong> 后运行以下命令：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init blog <span class=\"comment\"># 创建博客根目录并初始化</span></span><br></pre></td></tr></table></figure>\n<p>然后cd到 <strong>blog</strong> 目录，安装Hexo所必需的组件：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<p>到这一步其实Hexo博客就已经在本地搭建好了，这个时候运行以下命令：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean    <span class=\"comment\"># 清除网页缓存，此时博客刚刚搭建好，也可以暂时不运行此命令</span></span><br><span class=\"line\">hexo g        <span class=\"comment\"># 生成静态文件</span></span><br><span class=\"line\">hexo s        <span class=\"comment\"># 启动服务器预览，默认在本地4000端口运行</span></span><br></pre></td></tr></table></figure>\n<p>然后在默认情况下，访问 <a href=\"http://localhost:4000/\" target=\"_blank\">http://localhost:4000/</a> 即可在本地预览博客页面了。但此时的博客并不好看，因此我们还要给博客安装主题，以我安装的<a href=\"https://github.com/ikeq/hexo-theme-inside\" target=\"_blank\">ikeq的inside主题</a>为例 <em>(以主题的文档说明为准，不同的主题安装方式不同)</em> ：</p>\n<ol>\n<li>cd到 <strong>blog</strong> 目录并运行以下命令：</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-theme-inside</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>然后打开 <strong>blog/_config.yml</strong> 找到 <strong>theme</strong> 并修改为：</li>\n</ol>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">inside</span> <span class=\"comment\"># 不要忘记:之后有空格</span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>\n<p>复制 <strong><a href=\"https://github.com/ikeq/hexo-theme-inside/blob/master/_config.yml\" target=\"_blank\">_config.yml</a></strong> 中的全部代码到 <strong>blog/_config.inside.yml</strong> 中 <em>(如果没有 <strong>_config.inside.yml</strong> 文件则自行创建一个，可手动创建，也可cd到 <strong>blog</strong> 目录运行以下命令：)</em> 。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">touch</span> _config.inside.yml</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>至此，Hexo博客就已经初步搭建完成了，接下来就可以将博客托管到Github Pages <em>(也可以托管到Cloudflare、Vercel等其他平台，此处以Github为例)</em> 。</p>\n<h2 id=\"github-pages托管\">Github Pages托管<a title=\"#github-pages托管\" href=\"#github-pages托管\"></a></h2>\n<p>首先，需要在Github中创建一个名称为 <strong><code>name.github.io</code></strong> 的仓库 <em>(name是自定义的，并且每个Github账号只能创建一个这样的仓库)</em> 才能配合Github Pages使用。如果有需求，在该仓库 Settings 的 Pages 选项中可以 Custom domain <em>(自定义域名)</em> 。</p>\n<p>然后需要在 <strong>blog/_config.yml</strong> 的底部找到 <strong>deploy</strong> 这一项来设置博客的部署类型、GitHub仓库地址、仓库分支：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">\t<span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">\t<span class=\"attr\">repo:</span> <span class=\"string\">https://github.com/username/name.github.io</span> <span class=\"comment\"># username为GitHub用户名，name为新建仓库时设置的用户名</span></span><br><span class=\"line\">\t<span class=\"attr\">branch:</span> <span class=\"string\">master</span> <span class=\"comment\"># 如果没有修改仓库分支，则默认为 master</span></span><br></pre></td></tr></table></figure>\n<p>下一步需要cd到博客的根目录 <strong>blog</strong> 安装Hexo部署插件 <strong>hexo-deployer-git</strong> ：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p>然后在终端运行以下命令，全局设置Git的用户名和邮箱，即配置Github环境：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">&quot;username&quot;</span>    <span class=\"comment\"># Github的用户名</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">&quot;youremail&quot;</span>  <span class=\"comment\"># Github绑定的邮箱</span></span><br></pre></td></tr></table></figure>\n<p>最后再次运行以下命令，即可将修改的配置生成静态文件并部署到GitHub：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean    <span class=\"comment\"># 清楚网页缓存</span></span><br><span class=\"line\">hexo g        <span class=\"comment\"># 生成静态文件</span></span><br><span class=\"line\">hexo s        <span class=\"comment\"># 启动服务器预览，默认在本地4000端口运行</span></span><br><span class=\"line\">hexo d        <span class=\"comment\"># 将生成的静态文件部署到Github</span></span><br></pre></td></tr></table></figure>\n<p>在部署到GitHub的时候最好使用代理网络 <em>(macOS建议使用 <strong>Clash X Pro</strong> ，可参考我另外一篇文章<a href=\"https://blog.cco.moe/post/maclife\" target=\"_blank\">Macの日常</a>中的第(2)点，毕竟Github的服务器在国外，国内的访问体验较差)</em> 。同时，由于前面配置了Github环境，所以在部署的过程中会提示让输入Github的密码，输入密码后即可完成部署 <em>(终端中输入密码时不会有任何显示)</em> 。</p>\n<p>​\t<em><strong>Tips：</strong></em> 此处的密码并不是Github账号的密码，而是在github中 <em><strong>Settings &gt; Developer settings &gt; Personal access tokens &gt; Tokens (classic)</strong></em> 处生成的Tokens, 最好将这个Tokens记录下来，如果忘记就只能重新生成。</p>\n<h2 id=\"hexo使用\">Hexo使用<a title=\"#hexo使用\" href=\"#hexo使用\"></a></h2>\n<p>创建新文章可运行以下命令：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new NewPost <span class=\"comment\"># NewPost 为自定义的文章名称</span></span><br></pre></td></tr></table></figure>\n<p>而文章则被生成在 <strong>blog/source/_posts</strong> 文件夹下。</p>\n<p>如果想要创建草稿但是又不发表到博客中，则可以运行以下命令：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo n draft NewPost <span class=\"comment\"># n 即为 new 的缩写</span></span><br></pre></td></tr></table></figure>\n<p>此时，文章则被生成在 <strong>blog/source/_draft</strong> 文件夹下而不会被发表在博客中，只有 <strong>_posts</strong> 文件夹下的文章才会出现在博客中。</p>\n<p>如果想要将 _draft 文件夹中的文章发表在博客中，运行以下命令即可：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo publish NewPost <span class=\"comment\"># 此时 NewPost 为生成的markdown文档 .md 后缀前面的名称，空格会被替换为 - </span></span><br></pre></td></tr></table></figure>\n<p>运行完这条命令之后，这篇文章及其资源文件夹就都会从 <strong>_draft</strong> 文件夹移至 <strong>_posts</strong> 文件夹。然后再次运行命令 <em><strong>(以下三条命令很重要，会经常用到！)</strong></em> ：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean    <span class=\"comment\"># 清楚网页缓存</span></span><br><span class=\"line\">hexo g        <span class=\"comment\"># 生成静态文件</span></span><br><span class=\"line\">hexo d        <span class=\"comment\"># 将生成的静态文件部署到Github</span></span><br></pre></td></tr></table></figure>\n<p>部署完成之后，文章就会出现在博客中了。</p>\n<h2 id=\"hexo进阶\">Hexo进阶<a title=\"#hexo进阶\" href=\"#hexo进阶\"></a></h2>\n<h3 id=\"配置front-matter\">配置front-matter<a title=\"#配置front-matter\" href=\"#配置front-matter\"></a></h3>\n<p><strong>front-matter</strong> 就是Hexo文章的属性集合 <em>(可以这么理解)</em> ，位于markdown文档的顶部区域，其中包含了Hexo文章的多个属性。Hexo默认属性包含以下几种：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span>        <span class=\"comment\"># 文章标题</span></span><br><span class=\"line\"><span class=\"attr\">date:</span>         <span class=\"comment\"># 文章日期</span></span><br><span class=\"line\"><span class=\"attr\">updated:</span>      <span class=\"comment\"># 文章更新日期</span></span><br><span class=\"line\"><span class=\"attr\">comments:</span>     <span class=\"comment\"># 开启文章评论功能</span></span><br><span class=\"line\"><span class=\"attr\">tags:</span>         <span class=\"comment\"># 文章标签</span></span><br><span class=\"line\"><span class=\"attr\">categories:</span>   <span class=\"comment\"># 文章分类</span></span><br><span class=\"line\"><span class=\"attr\">layout:</span>       <span class=\"comment\"># 文章布局</span></span><br><span class=\"line\"><span class=\"attr\">permalink:</span>    <span class=\"comment\"># 文章链接格式(会覆盖根设置)</span></span><br></pre></td></tr></table></figure>\n<p>详见 <a href=\"https://hexo.io/docs/front-matter\" target=\"_blank\">https://hexo.io/docs/front-matter</a> 。</p>\n<p>inside主题 <em>(类似的主题)</em> 还有一个 <strong>thumbnail</strong> 属性：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">thumbnail:</span>    <span class=\"comment\"># 文章的头图路径</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"部署报错\">部署报错<a title=\"#部署报错\" href=\"#部署报错\"></a></h3>\n<p>如果发现Hexo部署报错，最简单的解决办法就是删掉 <strong>blog/.deploy_git</strong> 文件夹，然后重新部署 <em>( <strong>.deploy_git</strong> 文件夹为隐藏文件夹，Mac需同时按下 <strong><code>shift+command+.</code></strong> 显示隐藏文件)</em> 。</p>\n<h3 id=\"修改文章链接格式\">修改文章链接格式<a title=\"#修改文章链接格式\" href=\"#修改文章链接格式\"></a></h3>\n<p>文章的链接一开始默认是按照 <strong><code>年/月/日/标题</code></strong> 的格式来分类和显示的，但是这样并不好看且显得复杂，因此需要在 <strong>blog/_config.yml</strong> 文件中找到 <strong>permalink</strong> 这一项，并将其修改为：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">permalink:</span> <span class=\"string\">post/:title/</span> <span class=\"comment\"># post 将一直保留，而 :title 则显示为每篇文章的title</span></span><br></pre></td></tr></table></figure>\n<p>这样文章链接就是按照 <strong><code>post/title</code></strong> 的格式来分类和显示的，更加简洁好看。</p>\n<h3 id=\"开启文章资源文件夹\">开启文章资源文件夹<a title=\"#开启文章资源文件夹\" href=\"#开启文章资源文件夹\"></a></h3>\n<p>Hexo默认没有开启文章资源文件夹，所有的资源 <em>(除文章以外的所有文件)</em>  都存储在全局资源文件夹 <strong>blog/source</strong> 中，如果想要更有规律地管理图片及其他资源，则需要开启文章资源文件夹，因此需要在 <strong>blog/_config.yml</strong> 文件中找到 <strong>post_asset_folder</strong> 这一项并修改为：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">post_asset_folder:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"修改hexo语言\">修改Hexo语言<a title=\"#修改hexo语言\" href=\"#修改hexo语言\"></a></h3>\n<p>如果Hexo语言为中文，则Hexo主题中一些菜单栏的英文会被自动翻译成中文。但是有时候主题中的中文字体并没有英文字体好看，因此可以将Hexo的语言更改为英文或者其他语言。需要在 <strong>blog/_config.yml</strong> 文件中找到 <strong>language</strong> 这一项并修改为：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">en</span>    <span class=\"comment\"># 英语</span></span><br><span class=\"line\"><span class=\"comment\"># 或者其他语言</span></span><br><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">es</span>    <span class=\"comment\"># 西班牙语</span></span><br><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">fr</span>    <span class=\"comment\"># 法语</span></span><br><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">de</span>    <span class=\"comment\"># 德语</span></span><br><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">zh</span>    <span class=\"comment\"># 中文</span></span><br></pre></td></tr></table></figure>\n<p>重新部署，enjoy…</p>\n<p>本文参考了Hexo帮助文档，详见 <a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\">https://hexo.io/zh-cn/docs/</a> . 不许转载😡！！！</p>\n","prev":{"title":"Homebrewの安装教程","link":"post/homebrewinstall"},"next":{"title":"MacOS下zsh主题更换","link":"post/starship"},"plink":"http://example.com/post/blogbuilding/","toc":[{"id":"hexo安装","title":"Hexo安装","index":"1"},{"id":"github-pages托管","title":"Github Pages托管","index":"2"},{"id":"hexo使用","title":"Hexo使用","index":"3"},{"id":"hexo进阶","title":"Hexo进阶","index":"4","children":[{"id":"配置front-matter","title":"配置front-matter","index":"4.1"},{"id":"部署报错","title":"部署报错","index":"4.2"},{"id":"修改文章链接格式","title":"修改文章链接格式","index":"4.3"},{"id":"开启文章资源文件夹","title":"开启文章资源文件夹","index":"4.4"},{"id":"修改hexo语言","title":"修改Hexo语言","index":"4.5"}]}],"reward":true,"copyright":{"author":"chromoe","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"June 8, 2023"},"reading_time":"1872 words in 12 min"}